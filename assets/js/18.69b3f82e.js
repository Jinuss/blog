(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{346:function(t,s,a){t.exports=a.p+"assets/img/openlayer_length.f4e82b2b.gif"},347:function(t,s,a){t.exports=a.p+"assets/img/openlayer_length.6ef880bd.png"},485:function(t,s,a){"use strict";a.r(s);var e=a(4),n=Object(e.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[t._v("#")]),t._v(" 概述")]),t._v(" "),s("p",[t._v("在 Openlayers 中，计算两点之间的距离，通常会用到"),s("code",[t._v("ol/sphere")]),t._v("模块。"),s("code",[t._v("ol/sphere")]),t._v("模块主要用于处理与球体（特别是地球球体）相关的数学和几何计算。而长度测量主要用到"),s("code",[t._v("ol/sphere")]),t._v("中的"),s("code",[t._v("getDistance")]),t._v("函数。")]),t._v(" "),s("p",[s("code",[t._v("getDistance")]),t._v("函数用于计算地球表面两点之间的距离，通常用于经纬度坐标。计算的是球面上两点之间的大圆距离（即通过球体表面两个点的最短路径距离）。其返回值的单位是"),s("strong",[t._v("米 (m)")])]),t._v(" "),s("h2",{attrs:{id:"实践"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实践"}},[t._v("#")]),t._v(" 实践")]),t._v(" "),s("h3",{attrs:{id:"效果展示"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#效果展示"}},[t._v("#")]),t._v(" 效果展示")]),t._v(" "),s("p",[s("strong",[t._v("绘制")])]),t._v(" "),s("img",{attrs:{src:a(346)}}),t._v(" "),s("p",[s("strong",[t._v("结果")])]),t._v(" "),s("img",{attrs:{src:a(347)}}),t._v(" "),s("h3",{attrs:{id:"实现思路"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实现思路"}},[t._v("#")]),t._v(" 实现思路")]),t._v(" "),s("p",[t._v("绘制曲线可以采用 Openlayers 中的"),s("code",[t._v("ol/interaction")]),t._v("模块的"),s("code",[t._v("Draw")]),t._v("类")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("实例化 Draw")])])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("draw "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Draw")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("source")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("vectorLayer"),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?.")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSource")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("type")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"LineString"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("style")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("lineStyle"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("map"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("addInteraction")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("draw"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br"),s("span",{staticClass:"line-number"},[t._v("7")]),s("br")])]),s("ul",[s("li",[s("strong",[t._v("监听 this.draw 的 drawstart 方法")])])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("draw"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"drawstart"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("handleMeasureLineStart")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("bind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])]),s("p",[t._v("在"),s("code",[t._v("handleMeasureLineStart")]),t._v("回调方法中，接受一个"),s("code",[t._v("evt")]),t._v("对象，该对象包含绘制的"),s("code",[t._v("feature")]),t._v("以及坐标"),s("code",[t._v("coordinate")]),t._v("。效果图一中，在选择第一个点后，拖动鼠标，会实时显示当前鼠标表示的点与起点之间的距离，这个逻辑就是在该回调中实现的。")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("监听绘制的 feature 的 change 事件")])])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("listenGeometryChange "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" feature"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getGeometry")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"change"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("evt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*..处理逻辑..*/")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br")])]),s("p",[t._v("通过"),s("code",[t._v("evt.target")]),t._v("获取当前几何对象"),s("code",[t._v("geometry")]),t._v("，通过该几何对象的"),s("code",[t._v("getFirstCoordinate()")]),t._v("方法获取第一个点标记为起点，"),s("code",[t._v("getLastCoordinate()")]),t._v("方法获取最后一个点标记为终点。而绘制路线的转折点可以通过几何对象的"),s("code",[t._v("getCoordinates()")]),t._v("方法获取，这个方法包含首尾两端的点。")]),t._v(" "),s("ul",[s("li",[s("strong",[t._v("计算坐标距离")])])]),t._v(" "),s("p",[t._v("最前面提到通过"),s("code",[t._v("ol/sphere")]),t._v("的"),s("code",[t._v("getDistance()")]),t._v("方法计算两点之间的距离，而在上一步中可以得到所有折线段的坐标，循环调用"),s("code",[t._v("getDistance")]),t._v("方法，（需要注意的是如果当前坐标系不是经纬度的话，就需要转换）。就可以得到每段折线的距离。相加就是总长。但实际上例子中的总长是调用"),s("code",[t._v("sphere.getLength(geometry)")]),t._v("方法获取的，参数是几何对象。")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("sphere.getLength()")]),t._v("方法是用于计算球体表面上沿大圆弧的距离。其参数可以是"),s("code",[t._v("ol/geom/LineString")]),t._v(" | "),s("code",[t._v("ol/geom/Polygon")]),t._v(" | "),s("code",[t._v("ol/geom/MultiLineString")]),t._v(" | "),s("code",[t._v("ol/geom/MultiPolygon")]),t._v("的实例。")]),t._v(" "),s("li",[s("code",[t._v("geometry")]),t._v(" 是一个表示线（如 "),s("code",[t._v("LineString")]),t._v("）或面（如 "),s("code",[t._v("Polygon")]),t._v("）的几何对象。该几何对象可以是包含多个点的路径，或者是一个闭合的面。")]),t._v(" "),s("li",[t._v("对于一个 "),s("code",[t._v("LineString")]),t._v("（线），"),s("code",[t._v("getLength")]),t._v(" 计算的是从第一个点到最后一个点之间的球面大圆距离。")]),t._v(" "),s("li",[t._v("对于 "),s("code",[t._v("Polygon")]),t._v("（面），"),s("code",[t._v("getLength")]),t._v(" 计算的是边界线的球面长度。如果是多边形，则计算其外环的长度。")])]),t._v(" "),s("h2",{attrs:{id:"总结"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#总结"}},[t._v("#")]),t._v(" 总结")]),t._v(" "),s("p",[t._v("Openlayers 中提供了内置模块"),s("code",[t._v("ol/sphere")]),t._v("用于计算距离，绘制几何对象时，可以通过监听获取当前几何对象的关键值。")])])}),[],!1,null,null,null);s.default=n.exports}}]);