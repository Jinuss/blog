(window.webpackJsonp=window.webpackJsonp||[]).push([[120],{523:function(e,t,a){"use strict";a.r(t);var r=a(4),s=Object(r.a)({},(function(){var e=this,t=e._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[t("h2",{attrs:{id:"概述"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[e._v("#")]),e._v(" 概述")]),e._v(" "),t("p",[t("em",[e._v("ECMAScript2025")]),e._v("于2025年6月26日正式发布， 本文会介绍"),t("em",[e._v("ECMAScript2025(ES16)")]),e._v("，即ECMAScript的第16个版本的新特性。")]),e._v(" "),t("p",[e._v("以下摘自官网："),t("a",{attrs:{href:"https://tc39.es/ecma262/multipage/#sec-intro",target:"_blank",rel:"noopener noreferrer"}},[e._v("ecma-262"),t("OutboundLink")],1)]),e._v(" "),t("blockquote",[t("p",[e._v("ECMAScript 2025, the 16th edition, added a new Iterator global with associated static and prototype methods for working with iterators; added methods to Set.prototype for performing common operations on Sets; added support for importing JSON modules as well as syntax for declaring attributes of imported modules; added the RegExp.escape method for escaping a string to be safely used in a regular expression; added syntax for enabling and disabling modifier flags inline within regular expressions; added the Promise.try method for calling functions which may or may not return a Promise and ensuring the result is always a Promise; and added a new Float16Array TypedArray kind as well as the related DataView.prototype.getFloat16, DataView.prototype.setFloat16, and Math.f16round methods.")])]),e._v(" "),t("h2",{attrs:{id:"ecmascript2025的新特性如下"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#ecmascript2025的新特性如下"}},[e._v("#")]),e._v(" "),t("strong",[e._v("ECMAScript2025")]),e._v("的新特性如下：")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("Import")]),e._v("+"),t("code",[e._v("JSON")])]),e._v(" "),t("li",[e._v("迭代器辅助方法")]),e._v(" "),t("li",[t("code",[e._v("Set")]),e._v("实例方法增强")]),e._v(" "),t("li",[e._v("正则表达式")]),e._v(" "),t("li",[e._v("异步处理改进")]),e._v(" "),t("li",[e._v("数值表示扩展")])]),e._v(" "),t("h4",{attrs:{id:"import-json"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#import-json"}},[e._v("#")]),e._v(" "),t("code",[e._v("Import+JSON")])]),e._v(" "),t("p",[t("code",[e._v("ES2025")]),e._v("引入了"),t("code",[e._v("import attributes")]),e._v("，用于导入非JavaScript类型的模块，比如"),t("code",[e._v("JSON")]),e._v("模块。")]),e._v(" "),t("p",[e._v("如下：")]),e._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("import")]),e._v(" config "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("from")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'./config.json'")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[e._v("with")]),e._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[e._v("type")]),t("span",{pre:!0,attrs:{class:"token operator"}},[e._v(":")]),t("span",{pre:!0,attrs:{class:"token string"}},[e._v("'json'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])]),e._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[e._v("1")]),t("br")])]),t("h4",{attrs:{id:"迭代器辅助方法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#迭代器辅助方法"}},[e._v("#")]),e._v(" "),t("code",[e._v("迭代器辅助方法")])]),e._v(" "),t("p",[t("code",[e._v("ES2025")]),e._v("新增同步迭代器辅助函数：为所有同步迭代器添加一系列的辅助方法，比如"),t("code",[e._v("map")]),e._v("、"),t("code",[e._v("filter")]),e._v("、"),t("code",[e._v("some")]),e._v("等，并且支持链式调用，可用于链式处理可迭代对象的数据，实现惰性求值，避免创建多个中间数组。")]),e._v(" "),t("h4",{attrs:{id:"set实例方法增强"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#set实例方法增强"}},[e._v("#")]),e._v(" "),t("code",[e._v("Set")]),e._v("实例方法增强")]),e._v(" "),t("p",[t("code",[e._v("ES2025")]),e._v("为"),t("code",[e._v("Set")]),e._v("实例添加了如下方法：")]),e._v(" "),t("ul",[t("li",[t("code",[e._v("intersection")]),e._v("：返回两个集合的交集")]),e._v(" "),t("li",[t("code",[e._v("union")]),e._v("：返回两个集合的并集")]),e._v(" "),t("li",[t("code",[e._v("difference")]),e._v("：返回两个集合的差集")]),e._v(" "),t("li",[t("code",[e._v("symmetricDifference")]),e._v("：返回两个集合的对称差集")]),e._v(" "),t("li",[t("code",[e._v("isSubsetOf")]),e._v("：判断一个集合是否是另一个集合的子集")]),e._v(" "),t("li",[t("code",[e._v("isSupersetOf")]),e._v("：判断一个集合是否是另一个集合的超集")]),e._v(" "),t("li",[t("code",[e._v("isDisjointFrom")]),e._v("：判断两个集合是否没有交集")])]),e._v(" "),t("h4",{attrs:{id:"正则表达式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式"}},[e._v("#")]),e._v(" 正则表达式")]),e._v(" "),t("p",[t("code",[e._v("ES2025")]),e._v("在正则表达式方面有如下增强：")]),e._v(" "),t("ol",[t("li",[e._v("新增"),t("code",[e._v("RegExp.escape")]),e._v("方法，可将字符串中的正则元字符进行转义")]),e._v(" "),t("li",[e._v("正则表达式内联标志")]),e._v(" "),t("li",[e._v("重复命名捕获组")])]),e._v(" "),t("h4",{attrs:{id:"异步处理改进"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#异步处理改进"}},[e._v("#")]),e._v(" 异步处理改进")]),e._v(" "),t("p",[t("code",[e._v("ES2025")]),e._v("新增了"),t("code",[e._v("Promise.try()")]),e._v("方法，用于统一封装同步返回值或抛错的函数，对于一个可能会抛错的异常函数，使用"),t("code",[e._v("Promise.try")]),e._v("可以更方便进行错误处理。")]),e._v(" "),t("h4",{attrs:{id:"数值表示扩展"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#数值表示扩展"}},[e._v("#")]),e._v(" 数值表示扩展")]),e._v(" "),t("p",[t("code",[e._v("ES2025")]),e._v("提供对16位浮点数的原生支持，包括"),t("code",[e._v("Float16Array")]),e._v("、"),t("code",[e._v("DataView.prototype.getFloat16")]),e._v("/"),t("code",[e._v("DataView.prototype.setFloat16")]),e._v("以及"),t("code",[e._v("Math.f16round")]),e._v("方法，这些方法在WebGPU/WebGL中可节省带宽和内存。")]),e._v(" "),t("h4",{attrs:{id:"其他特性"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#其他特性"}},[e._v("#")]),e._v(" 其他特性")]),e._v(" "),t("ol",[t("li",[e._v("后置检查的声明式控制流：引入"),t("code",[e._v("checked{}")]),e._v("和"),t("code",[e._v("asset")]),e._v("关键字")]),e._v(" "),t("li",[t("code",[e._v("ArrayBuffer")]),e._v("的构造共享数组")])])])}),[],!1,null,null,null);t.default=s.exports}}]);