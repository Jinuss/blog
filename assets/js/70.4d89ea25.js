(window.webpackJsonp=window.webpackJsonp||[]).push([[70],{453:function(t,e,s){"use strict";s.r(e);var a=s(4),v=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"概述"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[t._v("#")]),t._v(" 概述")]),t._v(" "),e("p",[t._v("本文会持续更新，汇总了自"),e("em",[t._v("ECMAScript 2016")]),t._v(" 版本，即"),e("em",[t._v("ES7")]),t._v("开始的所有版本的新特性。")]),t._v(" "),e("h2",{attrs:{id:"ecmascript版本"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ecmascript版本"}},[t._v("#")]),t._v(" "),e("em",[t._v("ECMAScript")]),t._v("版本")]),t._v(" "),e("h3",{attrs:{id:"ecmascript2016-es7"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ecmascript2016-es7"}},[t._v("#")]),t._v(" "),e("strong",[t._v("ECMAScript2016(ES7)")])]),t._v(" "),e("p",[e("em",[t._v("ES7")]),t._v("只有两个新特性")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("Array.prototype.includes")]),t._v("：用于判断数组是否存在某元素")]),t._v(" "),e("li",[e("code",[t._v("**")]),t._v("：指数运算符")])]),t._v(" "),e("h4",{attrs:{id:"includes"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#includes"}},[t._v("#")]),t._v(" "),e("code",[t._v("includes")])]),t._v(" "),e("p",[e("code",[t._v("includes")]),t._v("方法会遍历数组（从索引0开始逐个检查，直到找到目标值或搜索完整个数组，如果存在该元素，则返回"),e("code",[t._v("true")]),t._v("，否则返回"),e("code",[t._v("false")]),t._v("。")]),t._v(" "),e("p",[e("code",[t._v("includes")]),t._v("的时间复杂度平均情况为"),e("em",[t._v("O(n)")]),t._v("，其中"),e("em",[t._v("n")]),t._v("为数组长度。")]),t._v(" "),e("h5",{attrs:{id:"对比js其他搜索方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#对比js其他搜索方法"}},[t._v("#")]),t._v(" 对比JS其他搜索方法")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("方法")]),t._v(" "),e("th",[t._v("时间复杂度")]),t._v(" "),e("th",[t._v("是否提前终止")]),t._v(" "),e("th",[t._v("适用场景")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[e("code",[t._v("includes")])]),t._v(" "),e("td",[e("em",[t._v("O(n)")])]),t._v(" "),e("td",[t._v("是")]),t._v(" "),e("td",[t._v("检查值是否存在")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("indexOf")])]),t._v(" "),e("td",[e("em",[t._v("O(n)")])]),t._v(" "),e("td",[t._v("是")]),t._v(" "),e("td",[t._v("获取值的索引")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("find")])]),t._v(" "),e("td",[e("em",[t._v("O(n)")])]),t._v(" "),e("td",[t._v("是")]),t._v(" "),e("td",[t._v("复杂条件搜索")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("some")])]),t._v(" "),e("td",[e("em",[t._v("O(n)")])]),t._v(" "),e("td",[t._v("是")]),t._v(" "),e("td",[t._v("条件匹配（返回布尔值）")])]),t._v(" "),e("tr",[e("td",[e("code",[t._v("Set.has")])]),t._v(" "),e("td",[e("em",[t._v("O(1)")])]),t._v(" "),e("td",[t._v("是")]),t._v(" "),e("td",[t._v("检查值是否存在")])])])]),t._v(" "),e("p",[t._v("因此对于高频搜索或者是大数据量搜索，建议先将数组转为"),e("code",[t._v("Set")]),t._v("，再使用"),e("code",[t._v("Set.has")]),t._v("方法。")]),t._v(" "),e("h5",{attrs:{id:"注意事项"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#注意事项"}},[t._v("#")]),t._v(" 注意事项")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("includes")]),t._v("方法可以查找"),e("code",[t._v("NaN")]),t._v("，而"),e("code",[t._v("indexOf")]),t._v("和"),e("code",[t._v("indexOf")]),t._v("方法不能查找"),e("code",[t._v("NaN")]),t._v("。")]),t._v(" "),e("li",[e("code",[t._v("includes")]),t._v("方法是不区分"),e("code",[t._v("+0")]),t._v("和"),e("code",[t._v("-0")])])]),t._v(" "),e("h5",{attrs:{id:"浏览器兼容性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#浏览器兼容性"}},[t._v("#")]),t._v(" 浏览器兼容性")]),t._v(" "),e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Jinuss/image-host/blog/includes.png"}}),t._v(" "),e("h4",{attrs:{id:""}},[e("a",{staticClass:"header-anchor",attrs:{href:"#"}},[t._v("#")]),t._v(" "),e("code",[t._v("**")])]),t._v(" "),e("p",[e("code",[t._v("**")]),t._v("运算符用于指数运算，即返回底数的指数次幂。比如"),e("code",[t._v("x**y")]),t._v("和"),e("code",[t._v("Math.pow(x,y)")]),t._v("是等价的")]),t._v(" "),e("h4",{attrs:{id:"浏览器兼容性-2"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#浏览器兼容性-2"}},[t._v("#")]),t._v(" 浏览器兼容性")]),t._v(" "),e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Jinuss/image-host/blog/指数运算符.png"}}),t._v(" "),e("h3",{attrs:{id:"ecmascript2017-es8"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ecmascript2017-es8"}},[t._v("#")]),t._v(" "),e("strong",[t._v("ECMAScript2017(ES8)")])]),t._v(" "),e("p",[t._v("ES8 新增了一些新特性，比如：")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("Object.values")]),t._v("：返回对象所有属性值"),e("code",[t._v("value")]),t._v("的数组")]),t._v(" "),e("li",[e("code",[t._v("Object.entries")]),t._v("：返回对象所有属性键值对"),e("code",[t._v("[key,value]")]),t._v("的数组")]),t._v(" "),e("li",[e("code",[t._v("Object.getOwnPropertyDescriptors")]),t._v("：返回对象所有属性的描述符")]),t._v(" "),e("li",[e("code",[t._v("String.prototype.padStart")]),t._v("和"),e("code",[t._v("String.prototype.padEnd")]),t._v("：用于字符串补全")]),t._v(" "),e("li",[e("code",[t._v("async/await")]),t._v("：异步编程的新方式")]),t._v(" "),e("li",[e("code",[t._v("SharedArrayBuffer")]),t._v("：共享内存的新方式")]),t._v(" "),e("li",[e("code",[t._v("Atomics")]),t._v("：原子操作的新方式")])]),t._v(" "),e("h4",{attrs:{id:"object方面"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#object方面"}},[t._v("#")]),t._v(" "),e("code",[t._v("Object")]),t._v("方面")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("Object.values")]),t._v("和"),e("code",[t._v("Object.entries")]),t._v("中返回的数组顺序都是以与"),e("code",[t._v("for in")]),t._v("循环所提供顺序相同，")])]),t._v(" "),e("h5",{attrs:{id:"浏览器兼容性-3"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#浏览器兼容性-3"}},[t._v("#")]),t._v(" 浏览器兼容性")]),t._v(" "),e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Jinuss/image-host/blog/object.values.png"}}),t._v(" "),e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Jinuss/image-host/blog/object.entries.png"}}),t._v(" "),e("ul",[e("li",[e("code",[t._v("Object.getOwnPropertyDescriptors")]),t._v("方法会返回指定对象的所有属性描述符，对象自身的属性描述符是直接在对象上定义的，不会从对象的原型继承。")])]),t._v(" "),e("h5",{attrs:{id:"浏览器兼容性-4"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#浏览器兼容性-4"}},[t._v("#")]),t._v(" 浏览器兼容性")]),t._v(" "),e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Jinuss/image-host/blog/object.getOwnProperptyDescription.png"}}),t._v(" "),e("h4",{attrs:{id:"string方面"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#string方面"}},[t._v("#")]),t._v(" "),e("code",[t._v("String")]),t._v("方面")]),t._v(" "),e("p",[e("code",[t._v("padStart")]),t._v("和"),e("code",[t._v("padEnd")]),t._v("方法用于从前或从后补全字符串，会返回补全后的新字符串，不会改变原字符串。其语法如下：")]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("padStart")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("targetLength"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" padString"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("padEnd")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("targetLength"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" padString"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])]),e("p",[e("code",[t._v("targetLength")]),t._v("：")]),t._v(" "),e("ul",[e("li",[t._v("目标长度，即补全后的字符串长度")]),t._v(" "),e("li",[t._v("如果目标长度小于等于当前字符串长度，返回当前字符串")])]),t._v(" "),e("p",[e("code",[t._v("padString")]),t._v("：")]),t._v(" "),e("ul",[e("li",[t._v("补全字符串，默认使用空格补全")]),t._v(" "),e("li",[t._v("如果"),e("code",[t._v("padString")]),t._v("长度大于目标长度，会截取超出部分")])]),t._v(" "),e("h5",{attrs:{id:"浏览器兼容性-5"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#浏览器兼容性-5"}},[t._v("#")]),t._v(" 浏览器兼容性")]),t._v(" "),e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Jinuss/image-host/blog/pad-start-end.png"}}),t._v(" "),e("h4",{attrs:{id:"async和await"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#async和await"}},[t._v("#")]),t._v(" "),e("code",[t._v("async")]),t._v("和"),e("code",[t._v("await")])]),t._v(" "),e("p",[e("code",[t._v("async")]),t._v("和"),e("code",[t._v("await")]),t._v("就是异步编程的语法糖，可以使异步代码看起来像同步代码一样。")]),t._v(" "),e("h5",{attrs:{id:"浏览器兼容性-6"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#浏览器兼容性-6"}},[t._v("#")]),t._v(" 浏览器兼容性")]),t._v(" "),e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Jinuss/image-host/blog/async.png"}}),t._v(" "),e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Jinuss/image-host/blog/await.png"}}),t._v(" "),e("h4",{attrs:{id:"sharedarraybuffer对象"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sharedarraybuffer对象"}},[t._v("#")]),t._v(" "),e("code",[t._v("SharedArrayBuffer")]),t._v("对象")]),t._v(" "),e("p",[e("code",[t._v("SharedArrayBuffer")]),t._v("是一种新的内存模型，用于在多个线程之间共享内存。该模型通常用来表示一个通用的，固定长度的原始二进制数据缓冲区，但是其不能被分离。")]),t._v(" "),e("h5",{attrs:{id:"浏览器兼容性-7"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#浏览器兼容性-7"}},[t._v("#")]),t._v(" 浏览器兼容性")]),t._v(" "),e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Jinuss/image-host/blog/sharedArrayBuffer.png"}}),t._v(" "),e("h4",{attrs:{id:"atomics对象"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#atomics对象"}},[t._v("#")]),t._v(" "),e("code",[t._v("Atomics")]),t._v("对象")]),t._v(" "),e("p",[t._v("共享内存能被同时创建和更新于工作线程或主线程。")]),t._v(" "),e("p",[e("code",[t._v("Atomics")]),t._v("对象提供了一组静态方法，用于在"),e("code",[t._v("SharedArrayBuffer")]),t._v("对象上执行原子操作。"),e("code",[t._v("Atomics")]),t._v("对象不是构造函数，因此不能使用"),e("code",[t._v("new")]),t._v("运算符，也不能当做函数直接调用。其所有属性和方法都是静态的，类似与"),e("code",[t._v("Math")]),t._v("对象。")]),t._v(" "),e("h5",{attrs:{id:"浏览器兼容性-8"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#浏览器兼容性-8"}},[t._v("#")]),t._v(" 浏览器兼容性")]),t._v(" "),e("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Jinuss/image-host/blog/Atomics.png"}}),t._v(" "),e("h3",{attrs:{id:"ecmascript2018-es9"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ecmascript2018-es9"}},[t._v("#")]),t._v(" "),e("strong",[t._v("ECMAScript2018(ES9)")])]),t._v(" "),e("p",[e("strong",[t._v("ES9")]),t._v("聚焦于异步编程、正则表达式和对象操作的标准化。新增的特性如下：")]),t._v(" "),e("ul",[e("li",[t._v("异步遍历 "),e("code",[t._v("Async Iteration")])]),t._v(" "),e("li",[e("code",[t._v("Reset/Spread")]),t._v("操作符和对象构建")]),t._v(" "),e("li",[t._v("正则表达式"),e("code",[t._v("RegExp")])]),t._v(" "),e("li",[e("code",[t._v("promise.finally")])])]),t._v(" "),e("h3",{attrs:{id:"ecmascript2019-es10"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ecmascript2019-es10"}},[t._v("#")]),t._v(" "),e("strong",[t._v("ECMAScript2019(ES10)")])]),t._v(" "),e("h3",{attrs:{id:"ecmascript2020-es11"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ecmascript2020-es11"}},[t._v("#")]),t._v(" "),e("strong",[t._v("ECMAScript2020(ES11)")])]),t._v(" "),e("h3",{attrs:{id:"ecmascript2021-es12"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ecmascript2021-es12"}},[t._v("#")]),t._v(" "),e("strong",[t._v("ECMAScript2021(ES12)")])]),t._v(" "),e("h3",{attrs:{id:"ecmascript2022-es13"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ecmascript2022-es13"}},[t._v("#")]),t._v(" "),e("strong",[t._v("ECMAScript2022(ES13)")])]),t._v(" "),e("h3",{attrs:{id:"ecmascript2023-es14"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ecmascript2023-es14"}},[t._v("#")]),t._v(" "),e("strong",[t._v("ECMAScript2023(ES14)")])]),t._v(" "),e("p",[e("code",[t._v("ES2023")]),t._v("新增的特性如下：")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("Array.prototype.findLast")]),t._v("/"),e("code",[t._v("Array.prototype.findLastIndex")])]),t._v(" "),e("li",[e("code",[t._v("Symbol.prototype.description")])]),t._v(" "),e("li",[t._v("数组的拷贝修改："),e("code",[t._v("toReversed")]),t._v("/"),e("code",[t._v("toSorted")]),t._v("/"),e("code",[t._v("toSpliced")]),t._v("/"),e("code",[t._v("with")])]),t._v(" "),e("li",[t._v("Hashbang(#!)支持")]),t._v(" "),e("li",[t._v("错误原因改善："),e("code",[t._v("new Error('error',{cause:'错误原因'})")])]),t._v(" "),e("li",[e("code",[t._v("WeakRef")]),t._v("和"),e("code",[t._v("FinalizationRegistry")]),t._v("的增强")]),t._v(" "),e("li",[t._v("允许使用"),e("code",[t._v("Symbol")]),t._v("作为"),e("code",[t._v("WeakMap")]),t._v("的键")])]),t._v(" "),e("h4",{attrs:{id:"findlast-findlastindex"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#findlast-findlastindex"}},[t._v("#")]),t._v(" "),e("code",[t._v("findLast")]),t._v("/"),e("code",[t._v("findLastIndex")])]),t._v(" "),e("p",[e("code",[t._v("findLast")]),t._v("方法用于查找数组中最后一个满足条件的元素，"),e("code",[t._v("findLastIndex")]),t._v("方法用于查找数组中最后一个满足条件的元素的索引。")]),t._v(" "),e("h4",{attrs:{id:"symbol-prototype-description"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#symbol-prototype-description"}},[t._v("#")]),t._v(" "),e("code",[t._v("Symbol.prototype.description")])]),t._v(" "),e("p",[e("code",[t._v("Symbol.prototype.description")]),t._v("方法用于获取"),e("code",[t._v("Symbol")]),t._v("对象的描述字符串。")]),t._v(" "),e("h4",{attrs:{id:"数组的拷贝修改"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数组的拷贝修改"}},[t._v("#")]),t._v(" 数组的拷贝修改")]),t._v(" "),e("p",[e("code",[t._v("ES2023")]),t._v("引入了数组的拷贝修改方法，包括"),e("code",[t._v("toReversed")]),t._v("、"),e("code",[t._v("toSorted")]),t._v("、"),e("code",[t._v("toSpliced")]),t._v("和"),e("code",[t._v("with")]),t._v("方法，这些方法都不会修改原始数组，而是返回经过变更的新数组")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("toReversed")]),t._v("：返回倒序新数组")]),t._v(" "),e("li",[e("code",[t._v("toSorted")]),t._v("：返回排序新数组")]),t._v(" "),e("li",[e("code",[t._v("toSpliced")]),t._v("：返回一个移除或替换元素后的新数组")]),t._v(" "),e("li",[e("code",[t._v("with")]),t._v("：返回一个特定索引处被替换的新数组")])]),t._v(" "),e("h3",{attrs:{id:"ecmascript2024-es15"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ecmascript2024-es15"}},[t._v("#")]),t._v(" "),e("strong",[t._v("ECMAScript2024(ES15)")])]),t._v(" "),e("p",[e("strong",[t._v("ECMAScript2024")]),t._v("的新特性如下：")]),t._v(" "),e("ul",[e("li",[e("strong",[t._v("Group By")]),t._v("分组："),e("code",[t._v("Object.groupBy")]),t._v("和"),e("code",[t._v("Map.group")])]),t._v(" "),e("li",[e("code",[t._v("Promise.withResolvers")])]),t._v(" "),e("li",[t._v("正则表达式标志 "),e("code",[t._v("/v")])]),t._v(" "),e("li",[e("code",[t._v("ArrayBuffers")]),t._v("和"),e("code",[t._v("SharedArrayBuffers")])]),t._v(" "),e("li",[e("code",[t._v("String.prototype.isWellFormed")]),t._v("和"),e("code",[t._v("String.prototype.toWellFormed")])]),t._v(" "),e("li",[e("code",[t._v("Atomics.waitAsync()")])])]),t._v(" "),e("h4",{attrs:{id:"group-by分组"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#group-by分组"}},[t._v("#")]),t._v(" Group By分组")]),t._v(" "),e("p",[e("code",[t._v("ES2024")]),t._v("引入"),e("code",[t._v("Object.groupBy")]),t._v("和"),e("code",[t._v("Map.groupBy")]),t._v("方法就是用于根据指定的条件对对象或可迭代对象进行分组。需要注意的是"),e("code",[t._v("Object.groupBy")]),t._v("方法返回的对象是没有原型的对象，无法继承"),e("code",[t._v("Object.prototype")]),t._v("上的任何属性或方法；另外它的第二个参数回调函数应该返回一个字符串或"),e("code",[t._v("Symbol")]),t._v("类型。")]),t._v(" "),e("h4",{attrs:{id:"promise-withresolvers"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#promise-withresolvers"}},[t._v("#")]),t._v(" "),e("code",[t._v("Promise.withResolvers")])]),t._v(" "),e("p",[e("code",[t._v("ES2024")]),t._v("引入"),e("code",[t._v("Promise.withResolvers")]),t._v("方法，用于创建一个"),e("code",[t._v("Promise")]),t._v("对象，该对象的"),e("code",[t._v("resolve")]),t._v("和"),e("code",[t._v("reject")]),t._v("方法可以在任何时候调用。使用示例如下")]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" promise"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" resolve"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" reject "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" Promise"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("withResolvers")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n  \n"),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 在这里可以使用 resolve 和 reject 函数  ")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("setTimeout")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("resolve")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'成功！'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("8000")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("  \n  \npromise"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("then")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("value")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("  \n  console"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("log")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("value"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" \n"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br"),e("span",{staticClass:"line-number"},[t._v("3")]),e("br"),e("span",{staticClass:"line-number"},[t._v("4")]),e("br"),e("span",{staticClass:"line-number"},[t._v("5")]),e("br"),e("span",{staticClass:"line-number"},[t._v("6")]),e("br"),e("span",{staticClass:"line-number"},[t._v("7")]),e("br"),e("span",{staticClass:"line-number"},[t._v("8")]),e("br")])]),e("p",[t._v("其中"),e("code",[t._v("resolve")]),t._v("和"),e("code",[t._v("reject")]),t._v("与"),e("code",[t._v("promise")]),t._v("本身是处于同一作用域，而不是在执行器中被创建和一次性使用，这对于更细粒度控制"),e("code",[t._v("Promise")]),t._v("状态非常有用。")]),t._v(" "),e("h4",{attrs:{id:"正则表达式v标志"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式v标志"}},[t._v("#")]),t._v(" 正则表达式"),e("code",[t._v("v")]),t._v("标志")]),t._v(" "),e("p",[e("code",[t._v("ES2024")]),t._v("提出的"),e("code",[t._v("v")]),t._v("标志是"),e("code",[t._v("u")]),t._v("标志的超集，且"),e("code",[t._v("v")]),t._v("还提供另外两个功能：")]),t._v(" "),e("ul",[e("li",[t._v("字符串的"),e("code",[t._v("Unicode")]),t._v("属性：通过"),e("code",[t._v("Unicode")]),t._v("属性转义，可以使用字符串的属性")]),t._v(" "),e("li",[t._v("设置符号：允许在字符类之间进行集合操作")])]),t._v(" "),e("h4",{attrs:{id:"arraybuffers与sharedarraybuffers"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#arraybuffers与sharedarraybuffers"}},[t._v("#")]),t._v(" "),e("code",[t._v("ArrayBuffers")]),t._v("与"),e("code",[t._v("SharedArrayBuffers")])]),t._v(" "),e("h5",{attrs:{id:"arraybuffers"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#arraybuffers"}},[t._v("#")]),t._v(" "),e("code",[t._v("ArrayBuffers")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("ArrayBuffer.prototype.resize")]),t._v("：用于调整"),e("code",[t._v("ArrayBuffer")]),t._v("的实例大小，以字节为单位，并且该指定的大小不能大于该实例的"),e("code",[t._v("maxByteLength")])]),t._v(" "),e("li",[e("code",[t._v("ArrayBuffer.prototype.transfer")]),t._v("：将当前"),e("code",[t._v("ArrayBuffer")]),t._v("的字节复制到一个新的"),e("code",[t._v("ArrayBuffer")]),t._v("对象中")])]),t._v(" "),e("h5",{attrs:{id:"sharedarraybuffers"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#sharedarraybuffers"}},[t._v("#")]),t._v(" "),e("code",[t._v("SharedArrayBuffers")])]),t._v(" "),e("p",[e("code",[t._v("SharedArrayBuffer")]),t._v("通用可调整大小，但是它只能扩大而不能缩小，而且也不能转移。")]),t._v(" "),e("h4",{attrs:{id:"iswellformed-towellformed"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#iswellformed-towellformed"}},[t._v("#")]),t._v(" "),e("code",[t._v("isWellFormed")]),t._v("/"),e("code",[t._v("toWellFormed")])]),t._v(" "),e("ul",[e("li",[e("code",[t._v("isWellFormed")]),t._v("：用于检查一个UTF-16编码字符串是否包含孤立的代理项")]),t._v(" "),e("li",[e("code",[t._v("toWellFormed")]),t._v("：用于将一个UTF-16编码字符串中的孤立代理项替换为替换字符U+FFFD")])]),t._v(" "),e("h4",{attrs:{id:"atomics-waitasync"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#atomics-waitasync"}},[t._v("#")]),t._v(" "),e("code",[t._v("Atomics.waitAsync")])]),t._v(" "),e("p",[e("code",[t._v("Atomics.waitAsync")]),t._v("静态方法异步等待共享内存的特定位置并返回一个"),e("code",[t._v("Promise")]),t._v("。")]),t._v(" "),e("h3",{attrs:{id:"ecmascript2025-es16"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ecmascript2025-es16"}},[t._v("#")]),t._v(" "),e("strong",[t._v("ECMAScript2025(ES16)")])]),t._v(" "),e("p",[e("strong",[t._v("ECMAScript2025")]),t._v("的新特性如下：")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("Import")]),t._v("+"),e("code",[t._v("JSON")])]),t._v(" "),e("li",[t._v("迭代器辅助方法")]),t._v(" "),e("li",[e("code",[t._v("Set")]),t._v("实例方法增强")]),t._v(" "),e("li",[t._v("正则表达式")]),t._v(" "),e("li",[t._v("异步处理改进")]),t._v(" "),e("li",[t._v("数值表示扩展")])]),t._v(" "),e("h4",{attrs:{id:"import-json"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#import-json"}},[t._v("#")]),t._v(" "),e("code",[t._v("Import+JSON")])]),t._v(" "),e("p",[e("code",[t._v("ES2025")]),t._v("引入了"),e("code",[t._v("import attributes")]),t._v("，用于导入非JavaScript类型的模块，比如"),e("code",[t._v("JSON")]),t._v("模块。")]),t._v(" "),e("p",[t._v("如下：")]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" config "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'./config.json'")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("with")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),e("span",{pre:!0,attrs:{class:"token literal-property property"}},[t._v("type")]),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'json'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("h4",{attrs:{id:"迭代器辅助方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#迭代器辅助方法"}},[t._v("#")]),t._v(" "),e("code",[t._v("迭代器辅助方法")])]),t._v(" "),e("p",[e("code",[t._v("ES2025")]),t._v("新增同步迭代器辅助函数：为所有同步迭代器添加一系列的辅助方法，比如"),e("code",[t._v("map")]),t._v("、"),e("code",[t._v("filter")]),t._v("、"),e("code",[t._v("some")]),t._v("等，并且支持链式调用，可用于链式处理可迭代对象的数据，实现惰性求值，避免创建多个中间数组。")]),t._v(" "),e("h4",{attrs:{id:"set实例方法增强"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#set实例方法增强"}},[t._v("#")]),t._v(" "),e("code",[t._v("Set")]),t._v("实例方法增强")]),t._v(" "),e("p",[e("code",[t._v("ES2025")]),t._v("为"),e("code",[t._v("Set")]),t._v("实例添加了如下方法：")]),t._v(" "),e("ul",[e("li",[e("code",[t._v("intersection")]),t._v("：返回两个集合的交集")]),t._v(" "),e("li",[e("code",[t._v("union")]),t._v("：返回两个集合的并集")]),t._v(" "),e("li",[e("code",[t._v("difference")]),t._v("：返回两个集合的差集")]),t._v(" "),e("li",[e("code",[t._v("symmetricDifference")]),t._v("：返回两个集合的对称差集")]),t._v(" "),e("li",[e("code",[t._v("isSubsetOf")]),t._v("：判断一个集合是否是另一个集合的子集")]),t._v(" "),e("li",[e("code",[t._v("isSupersetOf")]),t._v("：判断一个集合是否是另一个集合的超集")]),t._v(" "),e("li",[e("code",[t._v("isDisjointFrom")]),t._v("：判断两个集合是否没有交集")])]),t._v(" "),e("h4",{attrs:{id:"正则表达式"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式"}},[t._v("#")]),t._v(" 正则表达式")]),t._v(" "),e("p",[e("code",[t._v("ES2025")]),t._v("在正则表达式方面有如下增强：")]),t._v(" "),e("ol",[e("li",[t._v("新增"),e("code",[t._v("RegExp.escape")]),t._v("方法，可将字符串中的正则元字符进行转义")]),t._v(" "),e("li",[t._v("正则表达式内联标志")]),t._v(" "),e("li",[t._v("重复命名捕获组")])]),t._v(" "),e("h4",{attrs:{id:"异步处理改进"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#异步处理改进"}},[t._v("#")]),t._v(" 异步处理改进")]),t._v(" "),e("p",[e("code",[t._v("ES2025")]),t._v("新增了"),e("code",[t._v("Promise.try()")]),t._v("方法，用于统一封装同步返回值或抛错的函数，对于一个可能会抛错的异常函数，使用"),e("code",[t._v("Promise.try")]),t._v("可以更方便进行错误处理。")]),t._v(" "),e("h4",{attrs:{id:"数值表示扩展"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数值表示扩展"}},[t._v("#")]),t._v(" 数值表示扩展")]),t._v(" "),e("p",[e("code",[t._v("ES2025")]),t._v("提供对16位浮点数的原生支持，包括"),e("code",[t._v("Float16Array")]),t._v("、"),e("code",[t._v("DataView.prototype.getFloat16")]),t._v("/"),e("code",[t._v("DataView.prototype.setFloat16")]),t._v("以及"),e("code",[t._v("Math.f16round")]),t._v("方法，这些方法在WebGPU/WebGL中可节省带宽和内存。")]),t._v(" "),e("h4",{attrs:{id:"其他特性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#其他特性"}},[t._v("#")]),t._v(" 其他特性")]),t._v(" "),e("ol",[e("li",[t._v("后置检查的声明式控制流：引入"),e("code",[t._v("checked{}")]),t._v("和"),e("code",[t._v("asset")]),t._v("关键字")]),t._v(" "),e("li",[e("code",[t._v("ArrayBuffer")]),t._v("的构造共享数组")])])])}),[],!1,null,null,null);e.default=v.exports}}]);