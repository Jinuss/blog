(window.webpackJsonp=window.webpackJsonp||[]).push([[111],{514:function(s,t,e){"use strict";e.r(t);var a=e(4),r=Object(a.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("p",[t("strong",[s._v("ECMAScript2024")]),s._v("的新特性如下：")]),s._v(" "),t("ul",[t("li",[t("strong",[s._v("Group By")]),s._v("分组："),t("code",[s._v("Object.groupBy")]),s._v("和"),t("code",[s._v("Map.group")])]),s._v(" "),t("li",[t("code",[s._v("Promise.withResolvers")])]),s._v(" "),t("li",[s._v("正则表达式标志 "),t("code",[s._v("/v")])]),s._v(" "),t("li",[t("code",[s._v("ArrayBuffers")]),s._v("和"),t("code",[s._v("SharedArrayBuffers")])]),s._v(" "),t("li",[t("code",[s._v("String.prototype.isWellFormed")]),s._v("和"),t("code",[s._v("String.prototype.toWellFormed")])]),s._v(" "),t("li",[t("code",[s._v("Atomics.waitAsync()")])])]),s._v(" "),t("h4",{attrs:{id:"group-by分组"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#group-by分组"}},[s._v("#")]),s._v(" Group By分组")]),s._v(" "),t("p",[t("code",[s._v("ES2024")]),s._v("引入"),t("code",[s._v("Object.groupBy")]),s._v("和"),t("code",[s._v("Map.groupBy")]),s._v("方法就是用于根据指定的条件对对象或可迭代对象进行分组。需要注意的是"),t("code",[s._v("Object.groupBy")]),s._v("方法返回的对象是没有原型的对象，无法继承"),t("code",[s._v("Object.prototype")]),s._v("上的任何属性或方法；另外它的第二个参数回调函数应该返回一个字符串或"),t("code",[s._v("Symbol")]),s._v("类型。")]),s._v(" "),t("h4",{attrs:{id:"promise-withresolvers"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#promise-withresolvers"}},[s._v("#")]),s._v(" "),t("code",[s._v("Promise.withResolvers")])]),s._v(" "),t("p",[t("code",[s._v("ES2024")]),s._v("引入"),t("code",[s._v("Promise.withResolvers")]),s._v("方法，用于创建一个"),t("code",[s._v("Promise")]),s._v("对象，该对象的"),t("code",[s._v("resolve")]),s._v("和"),t("code",[s._v("reject")]),s._v("方法可以在任何时候调用。使用示例如下")]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" promise"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" resolve"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" reject "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Promise"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("withResolvers")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  \n  \n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 在这里可以使用 resolve 和 reject 函数  ")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("setTimeout")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("resolve")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'成功！'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8000")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  \n  \npromise"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("then")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token parameter"}},[s._v("value")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=>")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("  \n  console"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("log")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("value"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" \n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("p",[s._v("其中"),t("code",[s._v("resolve")]),s._v("和"),t("code",[s._v("reject")]),s._v("与"),t("code",[s._v("promise")]),s._v("本身是处于同一作用域，而不是在执行器中被创建和一次性使用，这对于更细粒度控制"),t("code",[s._v("Promise")]),s._v("状态非常有用。")]),s._v(" "),t("h4",{attrs:{id:"正则表达式v标志"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#正则表达式v标志"}},[s._v("#")]),s._v(" 正则表达式"),t("code",[s._v("v")]),s._v("标志")]),s._v(" "),t("p",[t("code",[s._v("ES2024")]),s._v("提出的"),t("code",[s._v("v")]),s._v("标志是"),t("code",[s._v("u")]),s._v("标志的超集，且"),t("code",[s._v("v")]),s._v("还提供另外两个功能：")]),s._v(" "),t("ul",[t("li",[s._v("字符串的"),t("code",[s._v("Unicode")]),s._v("属性：通过"),t("code",[s._v("Unicode")]),s._v("属性转义，可以使用字符串的属性")]),s._v(" "),t("li",[s._v("设置符号：允许在字符类之间进行集合操作")])]),s._v(" "),t("h4",{attrs:{id:"arraybuffers与sharedarraybuffers"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#arraybuffers与sharedarraybuffers"}},[s._v("#")]),s._v(" "),t("code",[s._v("ArrayBuffers")]),s._v("与"),t("code",[s._v("SharedArrayBuffers")])]),s._v(" "),t("h5",{attrs:{id:"arraybuffers"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#arraybuffers"}},[s._v("#")]),s._v(" "),t("code",[s._v("ArrayBuffers")])]),s._v(" "),t("ul",[t("li",[t("code",[s._v("ArrayBuffer.prototype.resize")]),s._v("：用于调整"),t("code",[s._v("ArrayBuffer")]),s._v("的实例大小，以字节为单位，并且该指定的大小不能大于该实例的"),t("code",[s._v("maxByteLength")])]),s._v(" "),t("li",[t("code",[s._v("ArrayBuffer.prototype.transfer")]),s._v("：将当前"),t("code",[s._v("ArrayBuffer")]),s._v("的字节复制到一个新的"),t("code",[s._v("ArrayBuffer")]),s._v("对象中")])]),s._v(" "),t("h5",{attrs:{id:"sharedarraybuffers"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sharedarraybuffers"}},[s._v("#")]),s._v(" "),t("code",[s._v("SharedArrayBuffers")])]),s._v(" "),t("p",[t("code",[s._v("SharedArrayBuffer")]),s._v("通用可调整大小，但是它只能扩大而不能缩小，而且也不能转移。")]),s._v(" "),t("h4",{attrs:{id:"iswellformed-towellformed"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#iswellformed-towellformed"}},[s._v("#")]),s._v(" "),t("code",[s._v("isWellFormed")]),s._v("/"),t("code",[s._v("toWellFormed")])]),s._v(" "),t("ul",[t("li",[t("code",[s._v("isWellFormed")]),s._v("：用于检查一个UTF-16编码字符串是否包含孤立的代理项")]),s._v(" "),t("li",[t("code",[s._v("toWellFormed")]),s._v("：用于将一个UTF-16编码字符串中的孤立代理项替换为替换字符U+FFFD")])]),s._v(" "),t("h4",{attrs:{id:"atomics-waitasync"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#atomics-waitasync"}},[s._v("#")]),s._v(" "),t("code",[s._v("Atomics.waitAsync")])]),s._v(" "),t("p",[t("code",[s._v("Atomics.waitAsync")]),s._v("静态方法异步等待共享内存的特定位置并返回一个"),t("code",[s._v("Promise")]),s._v("。")])])}),[],!1,null,null,null);t.default=r.exports}}]);