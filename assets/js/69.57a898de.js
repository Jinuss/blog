(window.webpackJsonp=window.webpackJsonp||[]).push([[69],{447:function(e,v,_){"use strict";_.r(v);var i=_(4),t=Object(i.a)({},(function(){var e=this,v=e._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h3",{attrs:{id:"概述"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[e._v("#")]),e._v(" 概述")]),e._v(" "),v("p",[v("code",[e._v("vue-demi")]),e._v(" 是一个可以同时支持 vue2 和 vue3 的通用的 vue 库的开发工具，通过它无需担心用户安装的 vue 版本，只需要在代码中引入 vue-demi，就可以自动适配。")]),e._v(" "),v("h3",{attrs:{id:"常见变量"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#常见变量"}},[e._v("#")]),e._v(" 常见变量")]),e._v(" "),v("h3",{attrs:{id:"vuedemi-isvue2"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#vuedemi-isvue2"}},[e._v("#")]),e._v(" "),v("code",[e._v("vueDemi.isVue2")])]),e._v(" "),v("ul",[v("li",[v("code",[e._v("vueDemi.isVue2")]),e._v("检查当前环境是否正在使用 Vue 2")])]),e._v(" "),v("h3",{attrs:{id:"常见-api-介绍"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#常见-api-介绍"}},[e._v("#")]),e._v(" 常见 API 介绍")]),e._v(" "),v("ul",[v("li",[v("p",[v("code",[e._v("vueDemi.hasInjectionContext")]),e._v(": 函数用于检查当前环境是否具有注入上下文，返回的是一个布尔值")])]),e._v(" "),v("li",[v("p",[v("code",[e._v("vueDemi.inject")]),e._v(": 函数用于注入一个依赖项，返回的是注入的值")])]),e._v(" "),v("li",[v("p",[v("code",[e._v("vueDemi.toRaw")]),e._v(": 函数用于将一个响应式对象转换为普通对象，返回的是一个普通对象")])]),e._v(" "),v("li",[v("p",[v("code",[e._v("vueDemi.watch")]),e._v(": 函数用于创建一个观察者，返回的是一个观察者对象")])]),e._v(" "),v("li",[v("p",[v("code",[e._v("vueDemi.unref")]),e._v("：它允许你从响应式对象中获取其非响应式的原始值")])]),e._v(" "),v("li",[v("p",[v("code",[e._v("vueDemi.markRaw")]),e._v("：将对象标记为不可被代理，防止被代理对象被修改,确保对象始终是原始状态")])]),e._v(" "),v("li",[v("p",[v("code",[e._v("vueDemi.effectScope")]),e._v("：它允许你创建一个独立的作用域，用于管理和清理副作用函数。这在处理需要清理的副作用函数时非常有用，比如处理异步任务或者监听器。")])]),e._v(" "),v("li",[v("p",[v("code",[e._v("vueDemi.ref")]),e._v("：它用于创建一个响应式的引用对象")])]),e._v(" "),v("li",[v("p",[v("code",[e._v("vueDemi.toRefs")]),e._v("：toRefs 返回的是一个包含原始对象属性的 ref 对象，这意味着你可以直接访问属性的 value，并且当原始对象的属性值发生变化时，ref 对象也会相应地更新")])]),e._v(" "),v("li",[v("p",[v("code",[e._v("vueDemi.toRef")]),e._v("：用于创建 ref 对象，将其值与另一个响应式对象的指定属性保持同步的辅助函数")])]),e._v(" "),v("li",[v("p",[v("code",[e._v("vueDemi.computed")]),e._v("：用于创建一个计算属性")])]),e._v(" "),v("li",[v("p",[v("code",[e._v("vueDemi.nextTick")]),e._v("：用于确保在下一次 DOM 更新周期之前执行指定的代码。它常用于在数据更改后，确保组件的 DOM 结构已更新，然后再进行某些操作，如访问 DOM 元素或执行特定逻辑。")])]),e._v(" "),v("li",[v("p",[v("code",[e._v("vueDemi.reactive")]),e._v("：用于创建一个具有响应式能力的对象")])]),e._v(" "),v("li",[v("p",[v("code",[e._v("vueDemi.del")]),e._v("：用于从响应式对象中删除属性")])]),e._v(" "),v("li",[v("p",[v("code",[e._v("vueDemi.isRef")]),e._v("：用于检查一个值是否为一个引用对象 (Ref)")])]),e._v(" "),v("li",[v("p",[v("code",[e._v("vueDemi.isReactive")]),e._v("：用于检查一个对象是否为响应式对象")])]),e._v(" "),v("li",[v("p",[v("code",[e._v("vueDemi.set")]),e._v("：用于在不破坏响应性的情况下设置对象的属性")])]),e._v(" "),v("li",[v("p",[v("code",[e._v("vueDemi.getCurrentScope")]),e._v("：用于获取当前的渲染上下文（即渲染函数的作用域）")])]),e._v(" "),v("li",[v("p",[v("code",[e._v("vueDemi.getCurrentInstance")]),e._v("：用于获取当前组件实例的引用。")])]),e._v(" "),v("li",[v("p",[v("code",[e._v("vueDemi.onScopeDispose")]),e._v("：它用于注册一个在当前渲染上下文销毁时执行的回调函数")])])])])}),[],!1,null,null,null);v.default=t.exports}}]);