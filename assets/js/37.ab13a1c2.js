(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{348:function(t,s,a){t.exports=a.p+"assets/img/openalyers_area.7548125c.png"},491:function(t,s,a){"use strict";a.r(s);var n=a(4),e=Object(n.a)({},(function(){var t=this,s=t._self._c;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h2",{attrs:{id:"概述"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[t._v("#")]),t._v(" 概述")]),t._v(" "),s("p",[t._v("在 Openlayers 中面积的量测和长度的测量大同小异，都需要借助于"),s("code",[t._v("ol/sphere")]),t._v("模块，不同的是长度计算是调用"),s("code",[t._v("ol/sphere")]),t._v("模块的"),s("code",[t._v("getLength")]),t._v("方法，而面积则需要调用"),s("code",[t._v("getArea")]),t._v("方法。")]),t._v(" "),s("p",[t._v("如果还不清楚如何在 Openlayers 中计算长度，可以参考"),s("a",{attrs:{href:"https://jinuss.github.io/blog/pages/ef42bc/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Openlayers实现长度测量"),s("OutboundLink")],1)]),t._v(" "),s("h2",{attrs:{id:"实践"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#实践"}},[t._v("#")]),t._v(" 实践")]),t._v(" "),s("h3",{attrs:{id:"效果"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#效果"}},[t._v("#")]),t._v(" 效果")]),t._v(" "),s("img",{attrs:{src:a(348)}}),t._v(" "),s("h3",{attrs:{id:"代码分析"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#代码分析"}},[t._v("#")]),t._v(" 代码分析")]),t._v(" "),s("p",[t._v("同长度测量一样，监听"),s("code",[t._v("draw")]),t._v("类的实例对象的"),s("code",[t._v("drawstart")]),t._v("方法，然后监听当前绘制的几何对象的"),s("code",[t._v("change")]),t._v("事件，在这个监听回调函数中调用"),s("code",[t._v("ol/sphere")]),t._v("的"),s("code",[t._v("getArea")]),t._v("方法获取经纬度")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("draw"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"drawstart"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" feature "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")])]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("listener "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" feature"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getGeometry")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"change"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token parameter"}},[t._v("evt")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=>")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" geom "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" evt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("const")]),t._v(" area "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getArea")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("geom"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])]),s("h3",{attrs:{id:"ol-sphere的getarea方法"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ol-sphere的getarea方法"}},[t._v("#")]),t._v(" "),s("code",[t._v("ol/sphere")]),t._v("的"),s("code",[t._v("getArea")]),t._v("方法")]),t._v(" "),s("p",[s("code",[t._v("getArea")]),t._v("方法用于计算地球表面上几何形状的面积，并且考虑了球体的曲率，这意味着它并不是计算平面上的面积，而是计算球面上闭合路径所围成的面积。")]),t._v(" "),s("p",[s("strong",[t._v("参数")]),t._v(" "),s("strong",[s("code",[t._v("geometry")])]),t._v(" ("),s("code",[t._v("ol/geom/Polygon")]),t._v(" | "),s("code",[t._v("ol/geom/MultiPolygon")]),t._v("):")]),t._v(" "),s("ul",[s("li",[s("code",[t._v("geometry")]),t._v(" 是一个几何对象，通常是 "),s("code",[t._v("Polygon")]),t._v("（多边形）或者 "),s("code",[t._v("MultiPolygon")]),t._v("（多个多边形的集合）。")]),t._v(" "),s("li",[t._v("对于 "),s("code",[t._v("Polygon")]),t._v("，它表示一个闭合的区域，"),s("code",[t._v("getArea")]),t._v(" 计算的是该区域的球面面积。")]),t._v(" "),s("li",[t._v("对于 "),s("code",[t._v("MultiPolygon")]),t._v("，计算的是多个多边形的总球面面积。")])]),t._v(" "),s("p",[s("strong",[t._v("返回值")]),t._v(" "),s("code",[t._v("getArea")]),t._v("方法返回的是一个数值，其单位是平方米。")]),t._v(" "),s("h2",{attrs:{id:"ol-sphere实用-api-介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#ol-sphere实用-api-介绍"}},[t._v("#")]),t._v(" "),s("code",[t._v("ol/sphere")]),t._v("实用 API 介绍")]),t._v(" "),s("p",[t._v("除了已经提到的"),s("code",[t._v("getLength")]),t._v("、"),s("code",[t._v("getArea")]),t._v("和"),s("code",[t._v("getDistance")]),t._v("方法外，"),s("code",[t._v("ol/sphere")]),t._v("模块还提供了许多其它实用的 API 方法。如下介绍：")]),t._v(" "),s("ul",[s("li",[s("p",[s("strong",[s("code",[t._v("getClosestPoint")])]),t._v("\n计算一点到球面上某几何形状的最近点。")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("Sphere"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getClosestPoint")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("geometry"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" point"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])])]),t._v(" "),s("li",[s("p",[s("strong",[s("code",[t._v("containsCoordinate")])]),t._v("\n判断一个点是否在球面上某几何形状内。")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("Sphere"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("containsCoordinate")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("geometry"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" point"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])])]),t._v(" "),s("li",[s("p",[s("strong",[s("code",[t._v("getBearing")])]),t._v("\n计算从一个点到另一个点的方位角（即从第一个点到第二个点的航向角）。方位角是指沿着大圆航线，连接这两个点的方向。")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("Sphere"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getBearing")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("lon1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lat1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("lon2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lat2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])])]),t._v(" "),s("li",[s("p",[s("strong",[s("code",[t._v("getIntersection")])]),t._v("\n计算两条大圆弧（球面上的两条最短路径）之间的交点。如果相交，则返回交点，否则返回"),s("code",[t._v("null")])]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("Sphere"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getIntersection")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("lon1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lat1"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("lon2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lat2"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("lon3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lat3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("lon4"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" lat4"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br"),s("span",{staticClass:"line-number"},[t._v("2")]),s("br"),s("span",{staticClass:"line-number"},[t._v("3")]),s("br"),s("span",{staticClass:"line-number"},[t._v("4")]),s("br"),s("span",{staticClass:"line-number"},[t._v("5")]),s("br"),s("span",{staticClass:"line-number"},[t._v("6")]),s("br")])])]),t._v(" "),s("li",[s("p",[s("strong",[s("code",[t._v("isFlat")])]),t._v("\n判断一个几何对象是否为平面（即判断其是否位于球面的某个平面上）。如果几何对象包含任何曲率，"),s("code",[t._v("isFlat")]),t._v(" 返回 "),s("code",[t._v("false")]),t._v("；如果对象的坐标位于平面上，返回 "),s("code",[t._v("true")]),t._v("。")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("Sphere"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isFlat")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("geometry"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])])]),t._v(" "),s("li",[s("p",[s("strong",[s("code",[t._v("isValid")])]),t._v("\n判断一个几何对象是否有效。这对于确保几何对象在球面坐标系中是有效的非常有用。")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("Sphere"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("isValid")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("geometry"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])])]),t._v(" "),s("li",[s("p",[s("strong",[s("code",[t._v("getEnvelope")])]),t._v("\n获取几何对象的包围盒（"),s("code",[t._v("Bounding Box")]),t._v("），即可以包围该几何对象的最小矩形框。对于球面几何，返回的是一个近似的矩形包围盒。返回几何对象的包围盒，表示为最小的经纬度矩形。")]),t._v(" "),s("div",{staticClass:"language-js line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-js"}},[s("code",[t._v("Sphere"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("getEnvelope")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("geometry"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[t._v("1")]),s("br")])])])])])}),[],!1,null,null,null);s.default=e.exports}}]);