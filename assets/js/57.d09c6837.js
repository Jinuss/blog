(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{425:function(t,v,_){t.exports=_.p+"assets/img/micro.06611766.jpeg"},564:function(t,v,_){"use strict";_.r(v);var a=_(4),e=Object(a.a)({},(function(){var t=this,v=t._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h3",{attrs:{id:"概述"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#概述"}},[t._v("#")]),t._v(" 概述")]),t._v(" "),v("p",[t._v("本文主要是介绍下"),v("code",[t._v("iframe")]),t._v("标签和微前端的一些理论基础知识。")]),t._v(" "),v("h3",{attrs:{id:"iframe介绍"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#iframe介绍"}},[t._v("#")]),t._v(" "),v("code",[t._v("iframe")]),t._v("介绍")]),t._v(" "),v("p",[v("code",[t._v("iframe")]),t._v("标签主要用于嵌套其它"),v("code",[t._v("HTML")]),t._v("页面，使之成为网页的一部分，全称是"),v("code",[t._v("inline frame")]),t._v("，它是一种比较传统的网页嵌套方式，通常用于展示外部网站、广告、嵌入式应用等内容")]),t._v(" "),v("ul",[v("li",[v("p",[v("strong",[v("code",[t._v("ifrmae")]),t._v("的核心特点")])]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("独立文档上下文")]),t._v("："),v("code",[t._v("iframe")]),t._v(" 中的网页有自己的 "),v("code",[t._v("DOM")]),t._v("、"),v("code",[t._v("JavaScript")]),t._v(" 执行环境和样式，因此它与父页面相互独立。")]),t._v(" "),v("li",[v("strong",[t._v("跨域隔离")]),t._v("： 如果 "),v("code",[t._v("iframe")]),t._v(" 中加载的是外部域名的页面，父页面与 "),v("code",[t._v("iframe")]),t._v(" 页面之间通常无法直接进行 "),v("code",[t._v("JavaScript")]),t._v(" 访问，形成天然的跨域隔离。")]),t._v(" "),v("li",[v("strong",[t._v("嵌套显示")]),t._v("： "),v("code",[t._v("iframe")]),t._v("可以在一个页面中展示另一页面，常用于展示动态内容、嵌入第三方应用或服务。")]),t._v(" "),v("li",[v("strong",[t._v("安全性")]),t._v("： 使用 "),v("code",[t._v("iframe")]),t._v(" 时需要特别注意安全问题，尤其是跨域和内容安全。现代浏览器通常会对 "),v("code",[t._v("iframe")]),t._v(" 内容施加一定的限制，例如 X-Frame-Options 头来防止被嵌套在不信任的页面中。")])])]),t._v(" "),v("li",[v("p",[v("strong",[t._v("工作原理")]),t._v(" "),v("code",[t._v("iframe")]),t._v(" 通过嵌套 "),v("code",[t._v("HTML")]),t._v(" 页面，通常通过 "),v("code",[t._v("<iframe>")]),t._v(" 标签来实现：")])])]),t._v(" "),v("div",{staticClass:"language-html line-numbers-mode"},[v("pre",{pre:!0,attrs:{class:"language-html"}},[v("code",[v("span",{pre:!0,attrs:{class:"token tag"}},[v("span",{pre:!0,attrs:{class:"token tag"}},[v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("iframe")]),t._v(" "),v("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("src")]),v("span",{pre:!0,attrs:{class:"token attr-value"}},[v("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("https://www.example.com"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),v("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("width")]),v("span",{pre:!0,attrs:{class:"token attr-value"}},[v("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("600"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),t._v(" "),v("span",{pre:!0,attrs:{class:"token attr-name"}},[t._v("height")]),v("span",{pre:!0,attrs:{class:"token attr-value"}},[v("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[t._v("=")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')]),t._v("400"),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v('"')])]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),v("span",{pre:!0,attrs:{class:"token tag"}},[v("span",{pre:!0,attrs:{class:"token tag"}},[v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("iframe")]),v("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),v("div",{staticClass:"line-numbers-wrapper"},[v("span",{staticClass:"line-number"},[t._v("1")]),v("br")])]),v("p",[t._v("上面的代码会在当前页面嵌入 "),v("code",[t._v("www.example.com")]),t._v(" 页面，并设置宽高为"),v("code",[t._v("600x400")]),t._v(" 像素。")]),t._v(" "),v("ul",[v("li",[v("p",[v("strong",[v("code",[t._v("iframe")]),t._v("的常见使用场景")])]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("嵌入外部内容")]),t._v("： 比如嵌入第三方服务（如视频、地图等）。")]),t._v(" "),v("li",[v("strong",[t._v("广告展示")]),t._v("： "),v("code",[t._v("iframe")]),t._v(" 常用来展示广告，因为它与父页面的 JavaScript 和样式相隔离。")]),t._v(" "),v("li",[v("strong",[t._v("嵌入独立应用")]),t._v("： 比如嵌入一个应用程序，它是与主应用独立的，且能够保留自己独立的运行环境。")])])]),t._v(" "),v("li",[v("p",[v("strong",[v("code",[t._v("iframe")]),t._v(" 的局限性")])])]),t._v(" "),v("li",[v("p",[v("strong",[t._v("性能")]),t._v("： 每个"),v("code",[t._v("iframe")]),t._v("都需要加载和渲染一个完整的网页，可能会影响页面的加载速度。")])]),t._v(" "),v("li",[v("p",[v("strong",[t._v("隔离")]),t._v("： 如果"),v("code",[t._v("iframe")]),t._v("中的内容与父页面有交互需求，可能需要通过特殊的跨窗口通信机制（如 postMessage）来实现，增加了开发的复杂性。")])]),t._v(" "),v("li",[v("p",[v("strong",[t._v("SEO")]),t._v("： "),v("code",[t._v("iframe")]),t._v(" 中的内容通常不会被搜索引擎抓取，影响 SEO 效果。")])])]),t._v(" "),v("h3",{attrs:{id:"微前端介绍"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#微前端介绍"}},[t._v("#")]),t._v(" "),v("strong",[t._v("微前端")]),t._v("介绍")]),t._v(" "),v("p",[v("strong",[t._v("微前端")]),t._v("（Micro Frontend）概念的起源主要是受到"),v("strong",[t._v("微服务架构")]),t._v("（MicroServices Architecture）在后端开发中的成功实践启发。微服务架构的基本理念是将大型应用拆分成多个独立的、自治的服务，每个服务负责一个特定的功能或领域，能够独立开发、部署和扩展。这种思想的成功，促使前端领域也开始思考如何将传统的单体前端应用拆分成多个小型、独立、可部署的模块，以应对复杂度不断增加、团队协作困难等问题。")]),t._v(" "),v("img",{attrs:{src:_(425)}}),t._v(" "),v("h4",{attrs:{id:"微前端的核心思想"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#微前端的核心思想"}},[t._v("#")]),t._v(" "),v("strong",[t._v("微前端的核心思想")])]),t._v(" "),v("p",[t._v("微前端的核心思想就是将前端应用拆解成多个微应用（子应用），每个微应用都是独立的、自治的，拥有自己的开发、构建、部署和运行环境。微前端的主应用负责加载和展示这些微应用，而每个微应用可以独立更新，而不需要其他微应用的协作。")]),t._v(" "),v("p",[t._v("微前端架构的主要原则：")]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("独立性")]),t._v("：每个子应用都是独立的，具有独立的生命周期、技术栈、构建和部署流程。")]),t._v(" "),v("li",[v("strong",[t._v("松耦合")]),t._v("：子应用之间通过定义明确的 API 或协议进行交互，而不需要过多的依赖关系。")]),t._v(" "),v("li",[v("strong",[t._v("按需加载")]),t._v("：子应用可以根据需要进行加载，避免一次性加载所有资源，提升性能。")]),t._v(" "),v("li",[v("strong",[t._v("统一用户体验")]),t._v("：尽管微前端允许不同的子应用使用不同的技术栈，但整体的用户体验应该保持一致。")])]),t._v(" "),v("h4",{attrs:{id:"微前端的实现方式"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#微前端的实现方式"}},[t._v("#")]),t._v(" "),v("strong",[t._v("微前端的实现方式")])]),t._v(" "),v("p",[t._v("微前端的实现方法有多种，常见的几种方式包括：")]),t._v(" "),v("ul",[v("li",[v("strong",[t._v("iframe 嵌套")]),t._v("：最简单的方式是使用 "),v("code",[t._v("iframe")]),t._v(" 将子应用嵌入到主应用中，每个子应用都是一个独立的页面，具有自己的生命周期和沙箱环境。")]),t._v(" "),v("li",[v("strong",[t._v("JavaScript 动态加载")]),t._v("：通过动态加载子应用的脚本文件，将其嵌入到主应用中进行展示，子应用的资源在需要时加载。")]),t._v(" "),v("li",[v("strong",[t._v("基于框架的解决方案")]),t._v("：例如 "),v("code",[t._v("qiankun")]),t._v("（基于 "),v("code",[t._v("Single-spa")]),t._v("）提供了一种更为灵活和高效的方式，通过 "),v("code",[t._v("JavaScript")]),t._v(" 框架对微前端进行管理和控制。")]),t._v(" "),v("li",[v("strong",[t._v("Web Components")]),t._v("：利用 "),v("code",[t._v("Web Components")]),t._v(" 标准（例如 "),v("code",[t._v("custom elements")]),t._v("）创建独立的组件，进而将其集成到主应用中。")])]),t._v(" "),v("h3",{attrs:{id:"微前端框架的引入"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#微前端框架的引入"}},[t._v("#")]),t._v(" 微前端框架的引入")]),t._v(" "),v("p",[t._v("尽管"),v("code",[t._v("iframe")]),t._v("方案在网页嵌套方面简单实用，但是它依旧无法避免一些问题。而这个问题又正是"),v("code",[t._v("iframe")]),t._v("最大的特写，就说提供了浏览器原生的硬隔离方案，就像一个个沙箱（sandbox）一样可以进行样式隔离，JS隔离，但这也会导致应用之间上下文环境无法被共享，因此就引入了很多微前端框架，来解决这些问题。而"),v("code",[t._v("qiankun")]),t._v("就是其中之一。")]),t._v(" "),v("h3",{attrs:{id:"微前端框架qiankun介绍"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#微前端框架qiankun介绍"}},[t._v("#")]),t._v(" 微前端框架"),v("code",[t._v("qiankun")]),t._v("介绍")]),t._v(" "),v("p",[v("code",[t._v("qiankun")]),t._v(" 是一个基于 "),v("code",[t._v("JavaScript")]),t._v(" 框架的微前端解决方案，主要用于实现多个前端应用（微应用）在同一个页面中运行并彼此独立的开发和部署。它基于"),v("code",[t._v("Single-spa")]),t._v("（一个微前端框架）并扩展了一些功能，简化了微前端的实现。")]),t._v(" "),v("ul",[v("li",[v("p",[v("strong",[t._v("qiankun 的核心特点")])])]),t._v(" "),v("li",[v("p",[v("strong",[t._v("微前端架构")]),t._v("： "),v("code",[t._v("qiankun")]),t._v(" 使得多个前端应用可以并行运行在同一个页面上，类似于多个“子应用”在一个“主应用”内加载、卸载和通信。")])]),t._v(" "),v("li",[v("p",[v("strong",[t._v("独立部署和更新")]),t._v("： 每个微应用可以独立部署、升级，不需要其他应用的配合。")])]),t._v(" "),v("li",[v("p",[v("strong",[t._v("跨框架支持")]),t._v("： 支持 "),v("code",[t._v("React")]),t._v("、"),v("code",[t._v("Vue")]),t._v("、"),v("code",[t._v("Angular")]),t._v(" 等不同技术栈的应用混合运行。")])]),t._v(" "),v("li",[v("p",[v("strong",[t._v("子应用加载")]),t._v("： 通过微前端实现模块化，子应用的资源可以按需加载，减小初次加载的体积。")])]),t._v(" "),v("li",[v("p",[v("strong",[t._v("生命周期管理")]),t._v("： "),v("code",[t._v("qiankun")]),t._v(" 提供了完整的生命周期管理机制，例如 "),v("code",[t._v("beforeLoad")]),t._v("、"),v("code",[t._v("afterMount")]),t._v(" 等，帮助开发者在应用加载时进行更细粒度的控制。")])]),t._v(" "),v("li",[v("p",[v("strong",[t._v("工作原理")])])])]),t._v(" "),v("p",[v("code",[t._v("qiankun")]),t._v(" 的核心理念是通过将主应用和子应用之间的隔离性与通信能力结合，做到彼此独立开发，同时又可以在运行时通过特定机制进行集成。常见的工作方式包括：")]),t._v(" "),v("ul",[v("li",[t._v("主应用负责加载和卸载子应用。")]),t._v(" "),v("li",[t._v("子应用可以在不同的技术栈下开发，保持一定的独立性。")]),t._v(" "),v("li",[t._v("使用沙箱机制（"),v("code",[t._v("sandbox")]),t._v("），防止不同子应用之间的 "),v("code",[t._v("JavaScript")]),t._v(" 代码冲突。")])]),t._v(" "),v("h3",{attrs:{id:"iframe和qiankun的对比"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#iframe和qiankun的对比"}},[t._v("#")]),t._v(" "),v("code",[t._v("iframe")]),t._v("和"),v("code",[t._v("qiankun")]),t._v("的对比")]),t._v(" "),v("table",[v("thead",[v("tr",[v("th",{staticStyle:{"text-align":"left"}},[t._v("特性")]),t._v(" "),v("th",{staticStyle:{"text-align":"left"}},[v("code",[t._v("qiankun")]),t._v(" 微前端")]),t._v(" "),v("th",{staticStyle:{"text-align":"left"}},[v("code",[t._v("iframe")])])])]),t._v(" "),v("tbody",[v("tr",[v("td",{staticStyle:{"text-align":"left"}},[v("strong",[t._v("隔离性")])]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("提供沙箱机制，实现 "),v("code",[t._v("JavaScript")]),t._v(" 隔离，避免冲突")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("完全隔离，"),v("code",[t._v("DOM")]),t._v(" 和 "),v("code",[t._v("JavaScript")]),t._v(" 完全独立")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[v("strong",[t._v("性能")])]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("按需加载，子应用资源独立管理，性能较为优化")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("每个 Iframe 加载完整页面，可能影响性能")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[v("strong",[t._v("通信方式")])]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("支持主应用与子应用之间的通信，灵活且高效")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("通过"),v("code",[t._v("postMessage")]),t._v(" 等跨域通信方式")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[v("strong",[t._v("开发独立性")])]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("支持不同技术栈的应用协同开发，如"),v("code",[t._v("React")]),t._v("、"),v("code",[t._v("Vue")]),t._v(" 等")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("不同"),v("code",[t._v("iframe")]),t._v("中的页面完全独立，可以使用不同技术栈")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[v("strong",[t._v("使用场景")])]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("微前端架构，适合大型系统或多团队协作的场景")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("嵌套外部页面、广告展示、跨域内容嵌入等")])]),t._v(" "),v("tr",[v("td",{staticStyle:{"text-align":"left"}},[v("strong",[t._v("维护难度")])]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("开发和维护较为复杂，需要考虑多个微应用的协调与部署")]),t._v(" "),v("td",{staticStyle:{"text-align":"left"}},[t._v("开发和维护简单，但跨域和性能问题需要关注")])])])]),t._v(" "),v("p",[t._v("总结来说，"),v("code",[t._v("qiankun")]),t._v("更适合微前端架构，多个前端应用的集成和管理，而 "),v("code",[t._v("iframe")]),t._v(" 适合简单的嵌套页面场景，尤其是涉及跨域或外部内容嵌入时。两者的选择应根据具体需求、团队结构和系统架构来决定。")])])}),[],!1,null,null,null);v.default=e.exports}}]);